data glm;
input snoring disease total;
cards;
0 24 1379
2 35 638
4 21 213
5 30 254
;
run;

proc import
datafile="C:\Users\OWNER\Downloads\crab.xlsx"
out=crab dbms=xlsx replace;
sheet="crab";
run;



/*연속형변수*/
proc genmod data=glm;
model disease/total=snoring/dist=bin link=identity;
output out=a1 pred=pred; #결과를 sas 데이터로 저장
run;

/*범주형으로 변환=>class 사용
해석시 주의*/
proc genmod data=glm;
class snoring(ref="2");  #2를 기준으로 나머지를 해석
model disease/total=snoring/dist=bin link=identity type3;
output out=a2 pred=pred;
run;



/*로지스틱 회귀모형 -항등함수의 단점을 보완하기 위한 모형*/
/*link function에 항등함수를 제외한 다른 함수를 쓰면 beta를 바로 해석할 수 없음.
logit함수는 exp(beta)로 한 OR값을 해석해야 한다.*/
proc genmod data=glm;
model disease/total=snoring/dist=bin link=logit;
output out=b1 pred=pred;
run;

/*범주형으로 변환*/
proc genmod data=glm;
class snoring(ref="2"); /*ref에 상관없이 확률은 같음. alpha값이 ref에 따라 바뀜*/
model disease/total=snoring/dist=bin link=logit;
output out=b2 pred=pred;
run;



/*포아송회귀(도수 자료에 대한 일반화선형모형)*/
proc genmod data=crab;
model satell=width/dist=poi link=log;
run;

/*율자료에 대한 포아송회귀*/
data crab2;
input wigth cases satell @@;
log_case=log(cases);
cards;
22.69 14 14 23.84 14 20 24.77 28 67 25.84 39 105
26.79 22 63 27.74 24 93 28.67 18 71 30.41 14 72
;
run;

proc genmod data=crab2;
model satell=wigth/dist=poi link=identity offset="1";
run;


/*로지스틱 회귀 할 때, rare event 문제 발생하면 프로빗 회귀로 함. 
하지만 프로빗의 결정적인 문제가 or로 설명이 안되고, 각 범주 별 수치적 차이 비교 불가 
범주를 줄이는 등 재범주화 시키면 rare event를 없앨 수 있음.
재범주를 할 때는, 연구 전문가의 의견을 수렴하여 재범주 해야 함.*/



https://aispiration.com/r-algorithm/
