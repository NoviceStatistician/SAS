/*
data step프로토콜 SQL프로토콜 으로 나뉨
두가지 섞어서 사용하지 못함.(문법이 조금 다름)
ex)1. desanding 앞에 쓰고 SQL은 뒤에 씀.
     2. drop keep 구분자 공백 SQL은 콤마.
기존에 SQL문법을 그대로 쓰기 때문에 다른거임.
*/


proc sql; #SQL모드로 바꿔라. 이거 쓴 다음에는 data step모드 문법 사용 못함.
quit; #data step모드로 돌아감. SQL모드 나가기.

select 변수1, 변수2, 변수3 from dataset_name; #keep(변수1 변수2 변수3);



data data_app;
input id sex $ year job $ sal comma7. birth date10. ;
format sal comma7. birth yymmdd10.;
cards;
01 남성 55 의사 100,000 23APR1963
02 남성 40 공무원  70,000 03MAY1978
03 남성 25 교사  30,000 12JUN1993
04 여성 30 교사  50,000 30JUL1988
05 여성 40  의사  80,000 07NOV1978
06 여성 30 공무원 60,000 05APR1988
;
run;
Q1. data_app에서 sql문을 이용하여 직업과 연봉 출력
A1.
proc sql; 
select job, sal #마지막 변수 뒤에는 ,쓰지 않는다./모든 변수 선택하고 싶으면 select *
from data_app; #run안써도 실행 됨.

Q2. data_app에서 sql문을 이용하여 남성만 출력
A2.
proc sql;
select job, sal
from data_app
where sex='남성';

합치면, 
proc sql;
select job, sal from data_app;
select * from data_app where sex="남성";
quit;


Q.팀 별 평균을 산출하여 큰 순서대로 정렬

*proc means# 연속형 변수의 평균 구하는 가장 기본적인 함수

-data step
proc sort data=ex;
by team;
run;
proc means data=ex;
var strtwght; #strtwght라는 변수에 대해
by team; # team별 통계량 출력창 출력
output out=ma mean=mean; #통계량을 data set으로 저장함.
run;
proc sort data=m;
by descending m;
run;
proc print data=m;
run;

-SQL
proc sql;
select team, mean(strtwght) as mean_s
from ex #ex data set에서 
group by team #team별로(grouping)
order by mean_s desc; # 큰 순서대로 출력해줘
quit;

Q.data_app에서 성별에 따른 평균연봉이 높은 순(1) 직업에 따라 낮은 순(2)으로 출력
A.
-data step
1.
proc sort data=data_app;
by sal;
run;
proc means data=data_app;
var sal;
by sex;
output out=app_s mean=mean;
run;
proc sort data=app_s;
by descending mean;
run;
2.
proc sort data=data_app;
by job;
run;
proc means data=data_app;
var sal;
by job;
output out=app_j mean=mean;
run;
proc sort data=app_j;
by  mean;
run;

-SQL
proc sql;
select sex, mean(sal) as mean_s
from data_app
group by sex 
order by mean_s desc;#1
select job, mean(sal) as mean_s
from data_app
group by job
order by mean_s;#2
quit;





proc sql;
select name, strtwght
from ex
where team='yellow'; #한 문장으로 마무리함. where은 조건문
quit;


proc sql;
select name
from ex
where name like; '이%'; #'이'로 시작하는 사람들의 이름을 출력해
quit;


proc sql;
select name
from ex
where name like '_동'; #'동'으로 끝나는 사람을 출력(앞 포인트에 맞게끔 설정. __동 이면 '동'앞 2자는 뭐든 상관x. 넘으면x)
quit;


proc sql;
select name, strtwght
from ex
where strtwght in (80,90); #or을 간편하게 하기 위한 함수.
quit;


proc sql;
select name, strtwght
from ex
where strtwght between 60 and 80; #60< =변수 <=80
quit;


proc sql;
select name, strtwght
from ex
where strtwght is null; # null만 출력함. 컴이 알아서 문자나 숫자나 결측이면 다 찾아냄 
quit;



Q1. data_app에서 sql문의 like를 이용하여 남성의 연령과 직업 출력하기

A1.
proc sql;
select sex, year, job
from data_app;
quit;

A1-2
proc sql;
select year, job
from data_app
where sex like '남%';
quit;


Q2. data_app에서 sql문의 where을 이용하여 연봉이 결측이 아닌 대상자의 전체 변수 출력하기

A2.
proc sql;
select *  # 전체 다 선택
from data_app
where sal is not null;  # null아닌 것만 출력
quit;






